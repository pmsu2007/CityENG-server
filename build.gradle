plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'kr.city.eng'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	all {
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
		exclude module: 'tomcat-embed-el'
	}

	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('mapstructVersion', "1.5.3.Final")
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-undertow'
	implementation 'com.google.guava:guava:31.1-jre'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'

	// Lombok 1.18.16 버전 이상
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	// https://mapstruct.org/documentation/stable/reference/html/
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'commons-lang:commons-lang:2.6'
	
	modules {
		module("org.springframework.boot:spring-boot-starter-tomcat") {
			replacedBy("org.springframework.boot:spring-boot-starter-undertow", "Use Undertow instead of Tomcat")
		}
	}
}

compileJava {
	options.compilerArgs += [
		'-Amapstruct.defaultComponentModel=spring',
		'-Amapstruct.suppressGeneratorTimestamp=true',
		'-Amapstruct.suppressGeneratorVersionInfoComment=true',
		'-Amapstruct.verbose=true'
	]
}

tasks.named('test') {
	useJUnitPlatform()
}
