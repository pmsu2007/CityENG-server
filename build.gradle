plugins {
  id 'java'
  id 'org.springframework.boot' version '2.7.7'
  id 'io.spring.dependency-management' version '1.0.15.RELEASE'
  id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'kr.city.eng'
// bootstrap.properties에서 버전을 가져온다.
def props = new Properties()
file("/src/main/resources/application.properties").withInputStream { props.load(it) }
version = props.getProperty("info.app.version")
sourceCompatibility = '17'

configurations {
  all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    exclude module: 'tomcat-embed-el'
  }

  compileOnly {
    extendsFrom annotationProcessor
  }

  // querydsl 이 compileClassPath 를 상속하도록 설정
  querydsl.extendsFrom compileClasspath
}

ext {
  set('mapstructVersion', "1.5.3.Final")
  set('queryDslVersion', "5.0.0")
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-undertow'
  implementation 'com.google.guava:guava:31.1-jre'
  compileOnly 'org.projectlombok:lombok'
  runtimeOnly 'com.h2database:h2'

  // JWT
  implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
  implementation('io.jsonwebtoken:jjwt-impl:0.11.2','io.jsonwebtoken:jjwt-jackson:0.11.2')

  implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" // querydsl 라이브러리
  annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}" //  Querydsl 관련 코드 생성 기능 제공

  // Lombok 1.18.16 버전 이상
  implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
  // https://mapstruct.org/documentation/stable/reference/html/
  implementation "org.mapstruct:mapstruct:${mapstructVersion}"

  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'

  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
  annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'commons-lang:commons-lang:2.6'
  
  modules {
    module("org.springframework.boot:spring-boot-starter-tomcat") {
      replacedBy("org.springframework.boot:spring-boot-starter-undertow", "Use Undertow instead of Tomcat")
    }
  }
}

compileJava {
  options.compilerArgs += [
    '-Amapstruct.defaultComponentModel=spring',
    '-Amapstruct.suppressGeneratorTimestamp=true',
    '-Amapstruct.suppressGeneratorVersionInfoComment=true',
    '-Amapstruct.verbose=true'
  ]
}

// querydsl 적용
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
   jpa = true
   querydslSourcesDir = querydslDir
}
// sourceSets {
//   main.java.srcDir querydslDir
// }
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

sourceSets {
	main {
    java.srcDir querydslDir
		resources {
			if (project.hasProperty("profile")) {
				println 'System.setProperty : '+project.getProperty("profile")
				System.setProperty "spring.profiles.active", project.getProperty("profile")
				srcDirs = ["src/main/resources", "src/main/resources-"+System.getProperty("spring.profiles.active")]
				exclude(['application-*.properties'])
			} else {
				srcDir "src/main/resources"
			}
		}
	}
}

tasks.named('test') {
  useJUnitPlatform()
}
